{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isFinite = require( '@stdlib/assert-is-finite' ).isPrimitive; // eslint-disable-line stdlib/no-redeclare\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.iter] - maximum number of iterations\n* @param {PositiveNumber} [options.tol] - tolerance at which to terminate further evaluation of the continued fraction\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 50\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'tol' ) ) {\n\t\topts.tol = options.tol;\n\t\tif ( !isFinite( options.tol ) || options.tol <= 0.0 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive finite number. Option: `%s`.', 'tol', options.tol ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar EPS = require( '@stdlib/constants-float64-eps' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar TINY = 1.0e-50;\n\n\n// MAIN //\n\n/**\n* Evaluates the terms of a continued fraction.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Options} [options] - options\n* @param {NonNegativeInteger} [options.iter=1e308] - maximum number of iterations\n* @param {PositiveNumber} [options.tol] - tolerance at which to terminate further evaluation of the continued fraction\n* @throws {TypeError} must provide an iterator\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide validate options\n* @returns {(number|null)} result\n*\n* @example\n* var iterContinuedFractionSeq = require( '@stdlib/math-iter-sequences-continued-fraction' );\n*\n* // Create an iterator for generating continued fraction terms:\n* var it = iterContinuedFractionSeq( 3.245 );\n*\n* // Reconstruct the original value from the terms:\n* var v = iterContinuedFraction( it );\n* // returns ~3.245\n*/\nfunction iterContinuedFraction( iterator ) {\n\tvar delta;\n\tvar opts;\n\tvar err;\n\tvar b0;\n\tvar o;\n\tvar C;\n\tvar D;\n\tvar f;\n\tvar b;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iterator ) );\n\t}\n\topts = {\n\t\t'iter': 1e308,\n\t\t'tol': EPS\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, arguments[ 1 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Get the first iterated value...\n\to = iterator.next();\n\tif ( o.done ) {\n\t\treturn null;\n\t}\n\tb0 = o.value;\n\tif ( !isNumber( b0 ) || isnan( b0 ) ) {\n\t\treturn b0;\n\t}\n\t// Initialize parameters of the modified Lentz's algorithm...\n\tf = b0;\n\tif ( f === 0.0 ) {\n\t\tf = TINY;\n\t}\n\tC = f;\n\tD = 0.0;\n\n\t// Evaluate the terms of the continued fraction...\n\ti = 1;\n\twhile ( i < opts.iter ) {\n\t\t// Get the next iterated value...\n\t\to = iterator.next();\n\t\tif ( o.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\n\t\tb = o.value;\n\t\tif ( !isNumber( b ) || isnan( b ) ) {\n\t\t\tf = NaN;\n\t\t\tbreak;\n\t\t}\n\t\t// Use the modified Lentz's algorithm to find the next convergent...\n\t\tD += b;            // b_i + a_i*D_{i-1}, where a_i = 1.0 for all i\n\t\tif ( D === 0.0 ) {\n\t\t\tD = TINY;\n\t\t}\n\t\tC = b + ( 1.0/C ); // b_i + a_i/C_{i-1}, where a_i = 1.0 for all i\n\t\tif ( C === 0.0 ) {\n\t\t\tC = TINY;\n\t\t}\n\t\tD = 1.0 / D;\n\t\tdelta = C * D;\n\t\tf *= delta;\n\n\t\t// Check whether we can terminate computation...\n\t\tif ( abs( delta - 1.0 ) <= opts.tol ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ( i <= 1 ) {\n\t\treturn b0;\n\t}\n\treturn f;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterContinuedFraction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the terms of a continued fraction.\n*\n* @module @stdlib/math-iter-utils-continued-fraction\n*\n* @example\n* var iterContinuedFractionSeq = require( '@stdlib/math-iter-sequences-continued-fraction' );\n* var iterContinuedFraction = require( '@stdlib/math-iter-utils-continued-fraction' );\n*\n* var it = iterContinuedFractionSeq( 3.245 );\n*\n* var v = iterContinuedFraction( it );\n* // returns ~3.245\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isNonNegativeInteger","require$$2","isPrimitive","isFinite","require$$3","format","require$$4","validate_1","opts","options","iter","TypeError","tol","isIteratorLike","abs","EPS","isnan","isNumber","require$$5","validate","require$$6","lib","iterator","delta","err","b0","o","C","D","f","b","i","arguments","length","next","done","value","NaN"],"mappings":";;u3BAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAuBC,EAAmDC,YAC1EC,EAAWC,EAAsCF,YACjDG,EAASC,EA+Cb,IAAAC,EAtBA,SAAmBC,EAAMC,GACxB,OAAMb,EAAea,GAGhBX,EAAYW,EAAS,UACzBD,EAAKE,KAAOD,EAAQC,MACdV,EAAsBS,EAAQC,OAC5B,IAAIC,UAAW,2EAA4E,OAAQF,EAAQC,MAG/GZ,EAAYW,EAAS,SACzBD,EAAKI,IAAMH,EAAQG,KACbT,EAAUM,EAAQG,MAASH,EAAQG,KAAO,GACxC,IAAID,UAAWN,EAAQ,8EAA+E,MAAOI,EAAQG,MAGvH,KAdC,IAAID,UAAWN,EAAQ,qEAAsEI,KC/BlGI,EAAiBhB,EACjBiB,EAAMf,EACNgB,EAAMd,EACNe,EAAQZ,EACRa,EAAWX,EAAsCJ,YACjDG,EAASa,EACTC,EAAWC,EAmHf,ICrGAC,EDkBA,SAAgCC,GAC/B,IAAIC,EACAf,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMlB,EAAgBS,GACrB,MAAM,IAAIX,UAAWN,EAAQ,2DAA4DiB,IAM1F,GAJAd,EAAO,CACNE,KAAQ,MACRE,IAAOG,GAEHiB,UAAUC,OAAS,IACvBT,EAAML,EAAUX,EAAMwB,UAAW,KAEhC,MAAMR,EAKR,IADAE,EAAIJ,EAASY,QACNC,KACN,OAAO,KAGR,GADAV,EAAKC,EAAEU,OACDnB,EAAUQ,IAAQT,EAAOS,GAC9B,OAAOA,EAYR,IARW,KADXI,EAAIJ,KAEHI,EA/DS,OAiEVF,EAAIE,EACJD,EAAI,EAGJG,EAAI,EACIA,EAAIvB,EAAKE,QAEhBgB,EAAIJ,EAASY,QACNC,MAHgB,CASvB,GAHAJ,GAAK,EAELD,EAAIJ,EAAEU,OACAnB,EAAUa,IAAOd,EAAOc,GAAM,CACnCD,EAAIQ,IACJ,MAgBD,GAZW,KADXT,GAAKE,KAEJF,EAtFQ,OAyFE,KADXD,EAAIG,EAAM,EAAIH,KAEbA,EA1FQ,OA8FTE,GADAN,EAAQI,GADRC,EAAI,EAAMA,GAKLd,EAAKS,EAAQ,IAASf,EAAKI,IAC/B,MAGF,OAAKmB,GAAK,EACFN,EAEDI"}